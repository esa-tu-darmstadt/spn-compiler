// This is a stupid test!// Generated by CIRCT unknown git version
// Standard header to adapt well known macros to our needs.
`ifdef RANDOMIZE_REG_INIT
  `define RANDOMIZE
`endif // RANDOMIZE_REG_INIT
`ifdef RANDOMIZE_MEM_INIT
  `define RANDOMIZE
`endif // RANDOMIZE_MEM_INIT

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifdef RANDOMIZE
  `ifdef VERILATOR
    `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
  `else  // VERILATOR
    `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
  `endif // VERILATOR
`else  // RANDOMIZE
  `define INIT_RANDOM_PROLOG_
`endif // RANDOMIZE

module Queue_1(	// <unknown>:113:10
  input         clock,
                reset,
                io_enq_valid,
                io_enq_bits_last,
  input  [31:0] io_enq_bits_bits,
  input         io_deq_ready,
  output        io_enq_ready,
                io_deq_valid,
                io_deq_bits_last,
  output [31:0] io_deq_bits_bits,
  output [1:0]  io_count);

  wire        _io_enq_ready_output;	// <unknown>:113:10
  wire        _io_deq_valid_output;	// <unknown>:113:10
  wire        ram_MPORT_addr;	// src/main/scala/chisel3/util/Decoupled.scala:273:95
  wire        ram_MPORT_en;	// src/main/scala/chisel3/util/Decoupled.scala:273:95
  wire        ram_MPORT_clk = clock;	// src/main/scala/chisel3/util/Decoupled.scala:273:95
  wire        ram_MPORT_data_last = io_enq_bits_last;	// src/main/scala/chisel3/util/Decoupled.scala:273:95
  wire [31:0] ram_MPORT_data_bits = io_enq_bits_bits;	// src/main/scala/chisel3/util/Decoupled.scala:273:95
  wire        ram_MPORT_mask_last = 1'h1;	// src/main/scala/chisel3/util/Decoupled.scala:273:95, :287:8
  wire        ram_MPORT_mask_bits = 1'h1;	// src/main/scala/chisel3/util/Decoupled.scala:273:95, :287:8
  wire        ram_io_deq_bits_MPORT_addr;	// src/main/scala/chisel3/util/Decoupled.scala:273:95
  wire        ram_io_deq_bits_MPORT_en = 1'h1;	// src/main/scala/chisel3/util/Decoupled.scala:273:95, :287:8
  wire        ram_io_deq_bits_MPORT_clk = clock;	// src/main/scala/chisel3/util/Decoupled.scala:273:95
  wire        ram_io_deq_bits_MPORT_data_last;	// src/main/scala/chisel3/util/Decoupled.scala:273:95
  wire [31:0] ram_io_deq_bits_MPORT_data_bits;	// src/main/scala/chisel3/util/Decoupled.scala:273:95
  ram_last_combMem ram_last_ext (	// src/main/scala/chisel3/util/Decoupled.scala:273:95
    .R0_addr (ram_io_deq_bits_MPORT_addr),	// src/main/scala/chisel3/util/Decoupled.scala:273:95
    .R0_en   (ram_io_deq_bits_MPORT_en),	// src/main/scala/chisel3/util/Decoupled.scala:273:95
    .R0_clk  (ram_io_deq_bits_MPORT_clk),	// src/main/scala/chisel3/util/Decoupled.scala:273:95
    .W0_addr (ram_MPORT_addr),	// src/main/scala/chisel3/util/Decoupled.scala:273:95
    .W0_en   (ram_MPORT_en & ram_MPORT_mask_last),	// src/main/scala/chisel3/util/Decoupled.scala:273:95
    .W0_clk  (ram_MPORT_clk),	// src/main/scala/chisel3/util/Decoupled.scala:273:95
    .W0_data (ram_MPORT_data_last),	// src/main/scala/chisel3/util/Decoupled.scala:273:95
    .R0_data (ram_io_deq_bits_MPORT_data_last)
  );
  ram_bits_combMem ram_bits_ext (	// src/main/scala/chisel3/util/Decoupled.scala:273:95
    .R0_addr (ram_io_deq_bits_MPORT_addr),	// src/main/scala/chisel3/util/Decoupled.scala:273:95
    .R0_en   (ram_io_deq_bits_MPORT_en),	// src/main/scala/chisel3/util/Decoupled.scala:273:95
    .R0_clk  (ram_io_deq_bits_MPORT_clk),	// src/main/scala/chisel3/util/Decoupled.scala:273:95
    .W0_addr (ram_MPORT_addr),	// src/main/scala/chisel3/util/Decoupled.scala:273:95
    .W0_en   (ram_MPORT_en & ram_MPORT_mask_bits),	// src/main/scala/chisel3/util/Decoupled.scala:273:95
    .W0_clk  (ram_MPORT_clk),	// src/main/scala/chisel3/util/Decoupled.scala:273:95
    .W0_data (ram_MPORT_data_bits),	// src/main/scala/chisel3/util/Decoupled.scala:273:95
    .R0_data (ram_io_deq_bits_MPORT_data_bits)
  );
  reg         enq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         deq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg         maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:276:27
  wire        ptr_match = enq_ptr_value == deq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:277:33
  wire        _empty_T = maybe_full == 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:273:95, :276:27, :278:28
  wire        empty = ptr_match & _empty_T;	// src/main/scala/chisel3/util/Decoupled.scala:277:33, :278:{25,28}
  wire        full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:276:27, :277:33, :279:24
  wire        _do_enq_T = _io_enq_ready_output & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35
  wire        do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:280:27
  assign do_enq = _do_enq_T;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :280:27
  wire        _do_deq_T = io_deq_ready & _io_deq_valid_output;	// src/main/scala/chisel3/util/Decoupled.scala:51:35
  wire        do_deq;	// src/main/scala/chisel3/util/Decoupled.scala:281:27
  assign do_deq = _do_deq_T;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :281:27
  assign ram_MPORT_addr = enq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:286:16
  assign ram_MPORT_en = do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:286:16
  wire        wrap = &enq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40, :73:24
  wire [1:0]  _value_T = {1'h0, enq_ptr_value} + 2'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24, src/main/scala/chisel3/util/Decoupled.scala:273:95
  wire        _value_T_1 = _value_T[0];	// src/main/scala/chisel3/util/Counter.scala:77:24
  wire        _GEN = do_enq ? _value_T_1 : enq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:{15,24}, src/main/scala/chisel3/util/Decoupled.scala:286:16
  wire        wrap_1 = &deq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40, :73:24
  wire [1:0]  _value_T_2 = {1'h0, deq_ptr_value} + 2'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24, src/main/scala/chisel3/util/Decoupled.scala:273:95
  wire        _value_T_3 = _value_T_2[0];	// src/main/scala/chisel3/util/Counter.scala:77:24
  wire        _GEN_0 = do_deq ? _value_T_3 : deq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:{15,24}, src/main/scala/chisel3/util/Decoupled.scala:290:16
  wire        _T = do_enq != do_deq;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:15, src/main/scala/chisel3/util/Decoupled.scala:286:16, :290:16, :293:15
  wire        _GEN_1 = _T ? do_enq : maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:276:27, :286:16, :293:{15,27}, :294:16
  wire        _io_deq_valid_T = empty == 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:273:95, :278:25, :302:19
  assign _io_deq_valid_output = _io_deq_valid_T;	// src/main/scala/chisel3/util/Decoupled.scala:302:{16,19}
  wire        _io_enq_ready_T = full == 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:273:95, :279:24, :303:19
  assign _io_enq_ready_output = _io_enq_ready_T;	// src/main/scala/chisel3/util/Decoupled.scala:303:{16,19}
  assign ram_io_deq_bits_MPORT_addr = deq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:310:23
  wire [1:0]  _ptr_diff_T = {1'h0, enq_ptr_value} - {1'h0, deq_ptr_value};	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:273:95, :326:32
  wire        ptr_diff = _ptr_diff_T[0];	// src/main/scala/chisel3/util/Decoupled.scala:326:32
  wire        _io_count_T = maybe_full & ptr_match;	// src/main/scala/chisel3/util/Decoupled.scala:276:27, :277:33, :329:32
  wire [1:0]  _io_count_T_1 = _io_count_T ? 2'h2 : 2'h0;	// src/main/scala/chisel3/util/Decoupled.scala:329:{20,32}
  wire [1:0]  _io_count_T_2 = _io_count_T_1 | {1'h0, ptr_diff};	// src/main/scala/chisel3/util/Decoupled.scala:273:95, :326:32, :329:{20,62}
  always @(posedge clock) begin
    if (reset) begin
      enq_ptr_value <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:273:95
      deq_ptr_value <= 1'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:273:95
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:273:95, :276:27
    end
    else begin
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:286:16
        enq_ptr_value <= _value_T_1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      else begin	// src/main/scala/chisel3/util/Decoupled.scala:286:16
      end
      if (do_deq)	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:15, src/main/scala/chisel3/util/Decoupled.scala:290:16
        deq_ptr_value <= _value_T_3;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      else begin	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:15, src/main/scala/chisel3/util/Decoupled.scala:290:16
      end
      if (_T)	// src/main/scala/chisel3/util/Decoupled.scala:293:15
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:276:27, :286:16
      else begin	// src/main/scala/chisel3/util/Decoupled.scala:293:15
      end
    end
  end // always @(posedge)
  `ifndef SYNTHESIS	// <unknown>:113:10
    `ifdef FIRRTL_BEFORE_INITIAL	// <unknown>:113:10
      `FIRRTL_BEFORE_INITIAL	// <unknown>:113:10
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// <unknown>:113:10
      automatic logic [31:0] _RANDOM_0;	// <unknown>:113:10
      `ifdef INIT_RANDOM_PROLOG_	// <unknown>:113:10
        `INIT_RANDOM_PROLOG_	// <unknown>:113:10
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// <unknown>:113:10
        _RANDOM_0 = `RANDOM;	// <unknown>:113:10
        enq_ptr_value = _RANDOM_0[0];	// src/main/scala/chisel3/util/Counter.scala:61:40
        deq_ptr_value = _RANDOM_0[1];	// src/main/scala/chisel3/util/Counter.scala:61:40
        maybe_full = _RANDOM_0[2];	// src/main/scala/chisel3/util/Decoupled.scala:276:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// <unknown>:113:10
      `FIRRTL_AFTER_INITIAL	// <unknown>:113:10
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  assign io_enq_ready = _io_enq_ready_output;	// <unknown>:113:10, src/main/scala/chisel3/util/Decoupled.scala:51:35
  assign io_deq_valid = _io_deq_valid_output;	// <unknown>:113:10, src/main/scala/chisel3/util/Decoupled.scala:51:35
  assign io_deq_bits_last = ram_io_deq_bits_MPORT_data_last;	// <unknown>:113:10
  assign io_deq_bits_bits = ram_io_deq_bits_MPORT_data_bits;	// <unknown>:113:10
  assign io_count = _io_count_T_2;	// <unknown>:113:10, src/main/scala/chisel3/util/Decoupled.scala:329:62
endmodule


