// RUN: %optcall --convert-hispn-node-to-lospn %s | FileCheck %s

module  {
  "hi_spn.joint_query"() ( {
    "hi_spn.graph"() ( {
    ^bb0(%arg0: f64):  // no predecessors
      %0 = "hi_spn.categorical"(%arg0) {probabilities = [3.500000e-01, 5.500000e-01, 1.000000e-01]} : (f64) -> !hi_spn.probability
      "hi_spn.root"(%0) : (!hi_spn.probability) -> ()
    }) {numFeatures = 1 : ui32} : () -> ()
  }) {batchSize = 12 : ui32, errorModel = 1 : i32, inputType = f64, kernelName = "spn_kernel", maxError = 2.000000e-02 : f64, numFeatures = 1 : ui32, supportMarginal = false} : () -> ()
}

// NOTE: Assertions have been autogenerated by utils/generate-test-checks.py


// CHECK-LABEL:   "hi_spn.joint_query"() ({
// CHECK:           "hi_spn.graph"() ({
// CHECK:           ^bb0(%[[VAL_0:.*]]: f64):
// CHECK:             %[[VAL_1:.*]] = "lo_spn.categorical"(%[[VAL_0]]) {probabilities = [3.500000e-01, 5.500000e-01, 1.000000e-01], supportMarginal = false} : (f64) -> f64
// CHECK:             %[[VAL_2:.*]] = "lo_spn.log"(%[[VAL_1]]) : (f64) -> f64
// CHECK:             "lo_spn.yield"(%[[VAL_2]]) : (f64) -> ()
// CHECK:           }) {numFeatures = 1 : ui32} : () -> ()
// CHECK:         }) {batchSize = 12 : ui32, errorModel = 1 : i32, inputType = f64, kernelName = "spn_kernel", maxError = 2.000000e-02 : f64, numFeatures = 1 : ui32, supportMarginal = false} : () -> ()
